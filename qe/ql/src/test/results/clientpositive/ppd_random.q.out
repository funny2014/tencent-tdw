query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TAB src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value) c2)))) src1) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TAB src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value) c4)) (TOK_WHERE (> (. (TOK_TABLE_OR_COL src) key) '2')))) src2) (= (. (TOK_TABLE_OR_COL src1) c1) (. (TOK_TABLE_OR_COL src2) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) c4))) (TOK_WHERE (> (TOK_FUNCTION rand) 0.5))))

STAGE DEPENDENCIES:
  Stage-1
    type:root stage;
  Stage-0
    type:root stage;

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src1:default_db/src 
          Operator:          TableScan
            alias: default_db/src
            Operator:            Filter Operator
              predicate:
                  expr: (rand() > 0.5)
                  type: boolean
              Operator:              Select Operator
                expressions:
                      expr: key
                      type: string
                outputColumnNames: _col0
                Operator:                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                  key serialize infos:
                    table descs
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  sort order: +
                  output key names: reducesinkkey0
                  output value names: _col0
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                  tag: 0
                  value expressions:
                        expr: _col0
                        type: string
        src2:default_db/src 
          Operator:          TableScan
            alias: default_db/src
            Operator:            Filter Operator
              predicate:
                  expr: ((rand() > 0.5) and (key > '2'))
                  type: boolean
              Operator:              Filter Operator
                predicate:
                    expr: (key > '2')
                    type: boolean
                Operator:                Select Operator
                  expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
                  outputColumnNames: _col0, _col1
                  Operator:                  Reduce Output Operator
                    key expressions:
                          expr: _col0
                          type: string
                    key serialize infos:
                      table descs
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    sort order: +
                    output key names: reducesinkkey0
                    output value names: _col1
                    Map-reduce partition columns:
                          expr: _col0
                          type: string
                    tag: 1
                    value expressions:
                          expr: _col1
                          type: string
      Path -> Alias:
        file:/data/tdwadmin/tdwqev1.0R020/qe/build/ql/test/data/warehouse/default_db/src [src1:default_db/src, src2:default_db/src]
      Reduce Operator Tree:
        Operator:        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col1}
          handleSkewJoin: false
          outputColumnNames: _col0, _col3
          Operator:          Filter Operator
            predicate:
                expr: (rand() > 0.5)
                type: boolean
            Operator:            Select Operator
              expressions:
                    expr: _col0
                    type: string
                    expr: _col3
                    type: string
              outputColumnNames: _col0, _col1
              Operator:              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                  table descs
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1

query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
query: EXPLAIN SELECT src1.c1, src2.c4 FROM (SELECT src.key as c1, src.value as c2 from src ) src1 JOIN (SELECT src.key as c3, src.value as c4 from src where src.key > '2' ) src2 ON src1.c1 = src2.c3 WHERE rand() > 0.5
